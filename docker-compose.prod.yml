version: "3.9"

services:
  redis:
    restart: always
    image: redis:alpine3.16
  db:
    restart: always
    image: postgres:14.4-alpine
    env_file:
      - .env.prod
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  django:
    restart: always
    build: .
    command: ["sh", "-c", "make migrate && make gunicorn"]
    expose:
      - 8000
    env_file:
      - .env.prod
    volumes:
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
  worker:
    restart: always
    build: .
    command: venv/bin/python src/manage.py rqworker
    env_file:
      - .env.prod
  migration:
    build: .
    command: venv/bin/python src/manage.py migrate
    env_file:
      - .env.prod
    depends_on:
      - django
  nginx:
    restart: always
    build: ./nginx
    ports:
      - 1337:80
    volumes:
      - static_volume:/app/staticfiles
    depends_on:
      - django
  prometheus:
    restart: always
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    restart: always
    image: grafana/grafana:latest
    ports:
      - "3060:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    user: "0"
  rq-exporter:
    restart: always
    image: pablobuenaposada/rq-exporter
    ports:
      - "9726:9726"
    environment:
      RQ_REDIS_HOST: "redis"
    depends_on:
      - redis

volumes:
  postgres_data:
  static_volume:
  grafana-data: